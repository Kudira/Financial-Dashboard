{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport yfinance from 'yfinance';\nexport const useFinancialData = (symbol = 'IBM') => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Convert common symbols to Yahoo Finance format\n        const formattedSymbol = formatSymbol(symbol);\n\n        // Fetch historical data for the last 30 days\n        const results = await yfinance.historical({\n          symbol: formattedSymbol,\n          from: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000),\n          to: new Date(),\n          interval: '1d'\n        });\n        if (!results || results.length === 0) {\n          throw new Error(`No market data found for ${formattedSymbol}`);\n        }\n        const formattedData = results.map(item => ({\n          date: item.date.toISOString().split('T')[0],\n          open: parseFloat(item.open.toFixed(2)),\n          high: parseFloat(item.high.toFixed(2)),\n          low: parseFloat(item.low.toFixed(2)),\n          close: parseFloat(item.close.toFixed(2)),\n          volume: item.volume || 0\n        })).sort((a, b) => new Date(a.date) - new Date(b.date)); // Sort chronologically\n\n        setData(formattedData);\n      } catch (err) {\n        setError(err.message);\n        console.error('Failed to fetch market data:', err);\n        setData(getSampleData(symbol)); // Fallback to sample data\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [symbol]);\n  return {\n    data,\n    loading,\n    error\n  };\n};\n\n// Format symbols for Yahoo Finance compatibility\n_s(useFinancialData, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\nfunction formatSymbol(symbol) {\n  const symbolMap = {\n    'BTC': 'BTC-USD',\n    'ETH': 'ETH-USD',\n    'DOGE': 'DOGE-USD'\n  };\n  return symbolMap[symbol] || symbol;\n}\n\n// Generate realistic sample data\nfunction getSampleData(symbol) {\n  const baseValues = {\n    'AAPL': {\n      price: 180,\n      volatility: 5\n    },\n    'MSFT': {\n      price: 300,\n      volatility: 7\n    },\n    'IBM': {\n      price: 140,\n      volatility: 3\n    },\n    'BTC-USD': {\n      price: 50000,\n      volatility: 2000\n    },\n    'ETH-USD': {\n      price: 3000,\n      volatility: 150\n    },\n    'default': {\n      price: 100,\n      volatility: 2\n    }\n  };\n  const {\n    price,\n    volatility\n  } = baseValues[symbol] || baseValues.default;\n  return Array.from({\n    length: 30\n  }, (_, i) => {\n    const date = new Date();\n    date.setDate(date.getDate() - (29 - i));\n    const randomChange = (Math.random() - 0.5) * volatility;\n    const open = price + randomChange;\n    const close = open + (Math.random() - 0.3) * volatility;\n    return {\n      date: date.toISOString().split('T')[0],\n      open: parseFloat(open.toFixed(2)),\n      high: parseFloat((Math.max(open, close) + Math.random() * volatility).toFixed(2)),\n      low: parseFloat((Math.min(open, close) - Math.random() * volatility).toFixed(2)),\n      close: parseFloat(close.toFixed(2)),\n      volume: Math.floor(Math.random() * 5000000) + 1000000\n    };\n  });\n}","map":{"version":3,"names":["useState","useEffect","yfinance","useFinancialData","symbol","_s","data","setData","loading","setLoading","error","setError","fetchData","formattedSymbol","formatSymbol","results","historical","from","Date","now","to","interval","length","Error","formattedData","map","item","date","toISOString","split","open","parseFloat","toFixed","high","low","close","volume","sort","a","b","err","message","console","getSampleData","symbolMap","baseValues","price","volatility","default","Array","_","i","setDate","getDate","randomChange","Math","random","max","min","floor"],"sources":["C:/Users/DELL USER/fin-dash/src/hooks/useFinancialData.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport yfinance from 'yfinance';\r\n\r\nexport const useFinancialData = (symbol = 'IBM') => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        // Convert common symbols to Yahoo Finance format\r\n        const formattedSymbol = formatSymbol(symbol);\r\n        \r\n        // Fetch historical data for the last 30 days\r\n        const results = await yfinance.historical({\r\n          symbol: formattedSymbol,\r\n          from: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000),\r\n          to: new Date(),\r\n          interval: '1d'\r\n        });\r\n\r\n        if (!results || results.length === 0) {\r\n          throw new Error(`No market data found for ${formattedSymbol}`);\r\n        }\r\n\r\n        const formattedData = results\r\n          .map(item => ({\r\n            date: item.date.toISOString().split('T')[0],\r\n            open: parseFloat(item.open.toFixed(2)),\r\n            high: parseFloat(item.high.toFixed(2)),\r\n            low: parseFloat(item.low.toFixed(2)),\r\n            close: parseFloat(item.close.toFixed(2)),\r\n            volume: item.volume || 0\r\n          }))\r\n          .sort((a, b) => new Date(a.date) - new Date(b.date)); // Sort chronologically\r\n\r\n        setData(formattedData);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        console.error('Failed to fetch market data:', err);\r\n        setData(getSampleData(symbol)); // Fallback to sample data\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [symbol]);\r\n\r\n  return { data, loading, error };\r\n};\r\n\r\n// Format symbols for Yahoo Finance compatibility\r\nfunction formatSymbol(symbol) {\r\n  const symbolMap = {\r\n    'BTC': 'BTC-USD',\r\n    'ETH': 'ETH-USD',\r\n    'DOGE': 'DOGE-USD'\r\n  };\r\n  return symbolMap[symbol] || symbol;\r\n}\r\n\r\n// Generate realistic sample data\r\nfunction getSampleData(symbol) {\r\n  const baseValues = {\r\n    'AAPL': { price: 180, volatility: 5 },\r\n    'MSFT': { price: 300, volatility: 7 },\r\n    'IBM': { price: 140, volatility: 3 },\r\n    'BTC-USD': { price: 50000, volatility: 2000 },\r\n    'ETH-USD': { price: 3000, volatility: 150 },\r\n    'default': { price: 100, volatility: 2 }\r\n  };\r\n\r\n  const { price, volatility } = baseValues[symbol] || baseValues.default;\r\n\r\n  return Array.from({ length: 30 }, (_, i) => {\r\n    const date = new Date();\r\n    date.setDate(date.getDate() - (29 - i));\r\n    const randomChange = (Math.random() - 0.5) * volatility;\r\n    const open = price + randomChange;\r\n    const close = open + (Math.random() - 0.3) * volatility;\r\n    \r\n    return {\r\n      date: date.toISOString().split('T')[0],\r\n      open: parseFloat(open.toFixed(2)),\r\n      high: parseFloat((Math.max(open, close) + Math.random() * volatility).toFixed(2)),\r\n      low: parseFloat((Math.min(open, close) - Math.random() * volatility).toFixed(2)),\r\n       close: parseFloat(close.toFixed(2)),\r\n      volume: Math.floor(Math.random() * 5000000) + 1000000\r\n    };\r\n  });\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}